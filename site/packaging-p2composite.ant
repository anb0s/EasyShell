<?xml version="1.0"?>
<project name="project">

  <target name="getMajorMinorVersion">
    <script language="javascript">
      <![CDATA[
        // getting the value
        buildnumber = project.getProperty("unqualifiedVersion");
        index = buildnumber.lastIndexOf(".");
        counter = buildnumber.substring(0, index);
        project.setProperty("majorMinorVersion",counter);
      ]]>
    </script>
  </target>

  <target name="test_getMajorMinor" depends="getMajorMinorVersion">
    <echo message="majorMinorVersion: ${majorMinorVersion}"/>
  </target>

  <scriptdef language="javascript" name="upper">
    <attribute name="string" />
    <attribute name="to" />
      project.setProperty( attributes.get( "to" ),
                           attributes.get( "string" ).toUpperCase() );
  </scriptdef>

  <scriptdef language="javascript" name="lower">
    <attribute name="string" />
    <attribute name="to" />
      project.setProperty( attributes.get( "to" ),
                           attributes.get( "string" ).toLowerCase() );
  </scriptdef>

  <scriptdef language="javascript" name="ucfirst">
    <attribute name="string" />
    <attribute name="to" />
      var the_string = attributes.get( "string" );
      project.setProperty( attributes.get( "to" ),
                  the_string.substr(0,1).toUpperCase() + the_string.substr(1) );
  </scriptdef>

  <scriptdef language="javascript" name="capitalize">
    <attribute name="string" />
    <attribute name="to" />
      var s = new String( attributes.get( "string" ) );
      project.setProperty( attributes.get( "to" ),
              s.toLowerCase().replace( /^.|\s\S/g,
              function(a) { return a.toUpperCase(); }) );
  </scriptdef>

  <!--
    site.label			The name/title/label of the created composite site
    site.dir			The directory of the created composite site
    unqualifiedVersion 	The version without any qualifier replacement
    buildQualifier		The build qualifier
  -->
  <target name="compute.child.repository.data" depends="getMajorMinorVersion">
    <property name="parent.root.dir" location="../" />
    <property name="site.parent.dir" location="updates" />
  	<property name="build.version.major_minor" value="${majorMinorVersion}" />
    <property name="build.version.unqualified" value="${unqualifiedVersion}" />
    <property name="build.version.qualifier" value="${buildQualifier}" />
    <property name="build.version.full" value="${build.version.unqualified}.${build.version.qualifier}" />
    <property name="build.version.milestone" value="${buildMilestone}" />
    <property name="build.version.file" location="${project.build.directory}/build.version.properties" />
    <property name="site.composite.name" value="${site.label} ${majorMinorVersion}" />
    <ucfirst string="${site.dir}" to="site.dir.ucfirst" />
    <property name="main.site.composite.name" value="${site.label} ${site.dir.ucfirst} Versions" />
    <property name="main.composite.repository.directory" location="${site.parent.dir}/${site.dir}" />
    <property name="site.build.version.file" location="${main.composite.repository.directory}/build.version.properties" />
    <property name="composite.repository.directory" value="${main.composite.repository.directory}/${majorMinorVersion}" />
    <property name="child.repository" value="${build.version.full}" />
    <property name="child.repository.directory" value="${composite.repository.directory}/${child.repository}/" />
    <property name="build.version.path" value="${build.version.major_minor}/${build.version.full}" />
  </target>

  <target name="p2.composite.add" depends="compute.child.repository.data">
    <property name="source.repository" location="${project.build.directory}/repository"/>
    <echo message=" " />
    <echo message="Source repository path: ${source.repository}" />
    <echo message="Copying to ${child.repository.directory}..." />

    <mkdir dir="${child.repository.directory}"/>
    <copy todir="${child.repository.directory}" overwrite="true">
      <fileset dir="${source.repository}" />
    </copy>

    <add.composite.repository.internal
      composite.repository.location="${composite.repository.directory}"
      composite.repository.name="${site.composite.name}"
      composite.repository.child="${child.repository}"
    />

    <add.composite.repository.internal
      composite.repository.location="${main.composite.repository.directory}"
      composite.repository.name="${main.site.composite.name}"
      composite.repository.child="${majorMinorVersion}"
    />

    <echo file="${build.version.file}" append="false" message="build_version_major_minor=${build.version.major_minor}${line.separator}"/>
    <echo file="${build.version.file}" append="true"  message="build_version_unqualified=${build.version.unqualified}${line.separator}"/>
    <echo file="${build.version.file}" append="true"  message="build_version_qualifier=${build.version.qualifier}${line.separator}"/>
    <echo file="${build.version.file}" append="true"  message="build_version_full=${build.version.full}${line.separator}"/>
    <echo file="${build.version.file}" append="true"  message="build_version_path=${build.version.path}${line.separator}"/>
    <echo file="${build.version.file}" append="true"  message="build_version_milestone=${build.version.milestone}${line.separator}"/>

    <copy file="${parent.root.dir}/README.md" tofile="${site.parent.dir}/index.md" overwrite="true"/>
    <copy file="${build.version.file}" tofile="${site.build.version.file}" overwrite="true"/>
  </target>

  <!-- = = = = = = = = = = = = = = = = =
          macrodef: add.composite.repository.internal
         = = = = = = = = = = = = = = = = = -->
  <macrodef name="add.composite.repository.internal">
    <attribute name="composite.repository.location" />
    <attribute name="composite.repository.name" />
    <attribute name="composite.repository.child" />
    <sequential>

      <echo message=" " />
      <echo message="Composite repository       : @{composite.repository.location}" />
      <echo message="Composite name             : @{composite.repository.name}" />
      <echo message="Adding child repository    : @{composite.repository.child}" />

      <p2.composite.repository>
        <repository compressed="false" location="@{composite.repository.location}" name="@{composite.repository.name}" />
        <add>
          <repository location="@{composite.repository.child}" />
        </add>
      </p2.composite.repository>

      <echo file="@{composite.repository.location}/p2.index">version=1
metadata.repository.factory.order=compositeContent.xml,\!
artifact.repository.factory.order=compositeArtifacts.xml,\!
</echo>

    </sequential>
  </macrodef>


</project>
